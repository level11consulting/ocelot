# Default values for ocelot.
# This is a YAML-formatted file.
fullnameOverride: ocelot
nameOverride: ocelot
loglevel: info
# service account to attach to deployments
serviceAccount: default
# configuration for all services
# optional: ocelot images in a private repo, set name of secret to retrive docker creds
# ImagePullSecret: secret

# optional: if your consul/vault values are all set with a prefix at the beginning of path, set this value to the name of the prefix. will set the PATH_PREFIX environment variable
# KVPrefix: dev

# vault is the config block that will define how the VAULT_ADDR and VAULT_TOKEN environment variables are set
vault:
  # protocol is either http|https
  protocol: http
  # ip is the ip of the vault instance
  ip: 10.1.72.190
  # port is the port value of vault instance
  port: 8200
  # secretName is the name of the secret that has a vault token
  secretName: vault-token
  # secretKey is the key to the secret map that will return the vault token
  secretKey: token
# if consul is not configured on the host ip, set the values here
consul: {}
#  host: consul-consul # or w/e
#  port: 8500 # or w/e
# nsq is the config that tells ocelot where nsq is located
nsq:
  # nsqlookupd will be connected to by all services
  nsqlookupd:
    ip: nsqlookupd-svc.default
    port: 4161
  # nsqd will be connected to by any producers
  nsqd:
    port: 4150

admin:
  enabled: true
  swagger: false
  replicaCount: 3

  image:
    repository: docker.metaverse.l11.com/ocelot-admin
    tag: latest
    pullPolicy: Always

  service:
    # DO NOT CHANGE -- will currently _always_ be of type NodePort 
    type: NodePort
    port: 10000
    nodePort: 31000

  ingress:
    enabled: false
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-passthrough: "true"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - ocelot-admin.metaverse.l11.com
    tls: 
     - secretName: metaverse-secret
       hosts:
         - ocelot-admin.metaverse.l11.com
  grpcIngress:
    enabled: false
    host: ocelot-admin-grpc.metaverse.l11.com
    tlsSecret: metaverse-secret


  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

hookhandler:
  enabled: true
  replicaCount: 3

  image:
    repository: docker.metaverse.l11.com/ocelot-hookhandler
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 8088

  ingress:
    enabled: false
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-passthrough: "true"
    path: /
    hosts:
      - ocelot-hookhandler.metaverse.l11.com
    tls: 
     - secretName: metaverse-secret
       hosts:
         - ocelot-hookhandler.metaverse.l11.com

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

poller:
  enabled: true
## do not change
  replicaCount: 1

  image:
    repository: docker.metaverse.l11.com/ocelot-poller
    tag: latest
    pullPolicy: Always

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}

k8sToken:
  vaultRole: ocelot
  mountPath: /etc/vaulted
  tokenFileName: token
  enabled: true
  increment: 10m
  sidecar:
    image: docker.metaverse.l11.com/token-renewer
    tag: latest
  init:
    image: docker.metaverse.l11.com/token-grinch
    tag: latest
