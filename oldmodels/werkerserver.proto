syntax = "proto3";

option go_package = "pb";
package models;

import "protoc-gen-swagger/options/annotations.proto";
import "google/api/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Worker Node HTTP Server"
        version: "1.0"
        contact: {
            name: "jessi shank"
            email: "jessishank@level11.com"
        };
    };
    schemes: HTTP;
    consumes: "application/json"
    produces: "application/json";
};

service Build {
    // The stream keyword is specified before both the request type and response
    // type to make it as bidirectional streaming RPC method.

    rpc BuildInfo (Request) returns (stream Response) {
        option (google.api.http) = {
			get: "/v1/{hash}"
		};
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "Stream build"
            description: "Streams build logs of hash";
        tags: "build"
        };
    }
    rpc KillHash (Request) returns (stream Response) {
        option (google.api.http) = {
			delete: "/v1/{hash}"
		};
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "Kill active build"
            description: "Kill build that is actively running on this worker node";
        tags: "build"
        };
    }
}

message Request {
    string hash = 1;
}

message Response {
    string outputLine = 1;
}
